#+title: cape-use-package

A simple [[https://github.com/minad/cape][cape]] (Completion-At-Point Extension) for completing Emacs package names
from various sources.

[[file:.github/assets/demo.gif]]

* Install
** Manual
Download somewhere and add to your =load-path= and add =cape-use-package= to =completion-at-point-functions=.
** TODO Doom
Add the following lines to your relevant files

=packages.el=
#+begin_src emacs-lisp
(package! cape-use-package
  :recipe (:host github :repo "elken/cape-use-package"))
#+end_src

=config.el=
#+begin_src emacs-lisp
(use-package! cape-use-package
  :after cape
  :hook (emacs-lisp-mode . (lambda ()
                             (make-local-variable 'completion-at-point-functions)
                             (add-to-list 'completion-at-point-functions #'cape-use-package))))
#+end_src

* Configuration
The following options are available to customise:
** =cape-use-package-always-refetch=
By default, for obvious reasons, we don't update the list of available packages every time the completion is invoked. If this is desired, set this to be non-nil (and ensure your internet connection is able to handle it)
** =cape-use-package-annotation=
Specify the annotation to use (defaults to  ïƒ„ )
** =cape-use-package-completion-symbols=
A list of symbols to run the completion against.

Will check if the =car= of the current form exists in that list and that the =cddr= is =nil= (which means we're at the second element in the list aka the package name)
